{"version":3,"sources":["components/BurgerIcon.js","components/Search.js","App.js","serviceWorker.js","index.js"],"names":["BurgerIcon","_ref","open","props","Object","objectWithoutProperties","react_default","a","createElement","assign","className","key","SearchBar","_this","this","role","type","autoFocus","id","placeholder","aria-label","onChange","e","updateQuery","target","value","Component","App","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","getRestrooms","restroomMarkers","myInit","method","headers","Headers","mode","cache","restroomData","Request","fetch","then","res","ok","json","Error","setState","locations","mapInit","catch","err","console","log","data","mapboxgl","accessToken","state","api_key","_this$state","lng","lat","zoom","map","Map","container","mapContainer","style","center","createPopup","currentMarker","current","properties","popups","document","getElementsByClassName","remove","Popup","closeOnClick","setLngLat","geometry","coordinates","setHTML","concat","name","address","year_round","handicap_a11y","addTo","flyToMarker","flyTo","on","addLayer","source","layout","icon-image","icon-allow-overlap","features","marker","index","mapMarker","classList","Marker","offset","addEventListener","activeItem","stopPropagation","restroom","getElementById","add","addMarkers","currentRestroom","restroomProp","location","innerHTML","clickedRestroom","getAttribute","parentNode","buildRestroomList","_map$getCenter","getCenter","toFixed","getZoom","clearPopup","handleToggle","querySelector","toggle","handleClose","query","mapMarkers","toLowerCase","i","length","innerText","indexOf","display","_this2","_this$state2","ref","el","label","onClick","MuiThemeProvider_default","Drawer_default","docked","width","onRequestChange","textAlign","Search","Boolean","window","hostname","match","ReactDOM","render","src_App_0","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.cc321eac.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nexport default ({ open, ...props }) => (\r\n  <div className={open ? \"burger-menu open\" : \"burger-menu\"} {...props}>\r\n    <div className=\"bar1\" key=\"b1\" />\r\n    <div className=\"bar2\" key=\"b2\" />\r\n    <div className=\"bar3\" key=\"b3\" />\r\n  </div>\r\n);\r\n","import React, { Component } from 'react'\r\n\r\nclass SearchBar extends Component {\r\n\r\n  render() {\r\n      return (\r\n        <div className=\"locationsFilter\" role=\"application\">\r\n          <input\r\n          type=\"text\"\r\n          autoFocus\r\n          id=\"query-Filter\"\r\n          placeholder=\"Search...\"\r\n          aria-label=\"Locations filter\"\r\n          onChange={e => this.props.updateQuery(e.target.value)}\r\n          />\r\n        </div>\r\n      );\r\n    }\r\n}\r\n\r\nexport default SearchBar;","import React, { Component } from 'react';\r\nimport mapboxgl from 'mapbox-gl';\r\nimport BurgerIcon from './components/BurgerIcon';\r\nimport MuiThemeProvider from 'material-ui/styles/MuiThemeProvider';\r\nimport Drawer from 'material-ui/Drawer';\r\nimport SearchBar from './components/Search';\r\nimport './App.css';\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      api_key: 'pk.eyJ1IjoicGFwYW51Z2dldCIsImEiOiJjamxsNW12NHUwdHdsM2tuN3YwcmhsOGxmIn0.ihrjyIuDCgAtDNpU4xeSSA',\r\n      lng: -73.985128,\r\n      lat: 40.758939,\r\n      zoom: 12,\r\n      locations: {},\r\n      query: '',\r\n      open: false\r\n    }\r\n  }\r\n    componentDidMount() {\r\n      // get restoom data \r\n      this.getRestrooms();   \r\n    }\r\n    // get restroom function\r\n    getRestrooms = () => {\r\n      // init Object to pass to request arg\r\n      const myInit = {\r\n        method: 'GET',\r\n        headers: new Headers(),\r\n        mode: 'cors',\r\n        cache: 'default'\r\n      };\r\n      // new request for JSON data from API\r\n      const restroomData = new Request('https://api.myjson.com/bins/d8i44', myInit);\r\n      // init empty var to contain restroomData\r\n      let restroomMarkers;\r\n      // fetch request\r\n      fetch(restroomData)\r\n      // promise return \r\n      .then( res => {\r\n        // checks for ok status\r\n        if(res.ok) {\r\n          return res.json();\r\n        }\r\n        // error if response not ok \r\n        throw new Error('No network response.  Please try again later.');\r\n      }).then( res => { \r\n        // send response data to restroomMarkers obj\r\n        restroomMarkers = res;\r\n        // send data object to state\r\n        this.setState({locations: restroomMarkers});\r\n        this.mapInit(restroomMarkers);\r\n        // console.log(this.state.locations);\r\n        // log any errors\r\n      }).catch( err => console.log('Error: ', err));\r\n    }\r\n    \r\n    // load map after restroom data is retrieved\r\n     mapInit = data => {\r\n      mapboxgl.accessToken = this.state.api_key;\r\n      const { lng, lat, zoom } = this.state;\r\n      // console.log(restroomMarkers);\r\n      const map = new mapboxgl.Map({\r\n        container: this.mapContainer,\r\n        style: 'mapbox://styles/papanugget/cjmmeyf99ddth2rnyoua824ey',\r\n        center: [lng, lat],\r\n        zoom\r\n      });\r\n\r\n      // load map\r\n      map.on('load', () => {\r\n        map.addLayer({\r\n          id: 'locations',\r\n          type: 'symbol',\r\n          source: {\r\n            type: 'geojson',\r\n            data: data\r\n          },\r\n          layout: {\r\n            'icon-image': 'custom-marker',\r\n            'icon-allow-overlap': true\r\n          }\r\n        });\r\n          // function call with restroomMarkers data\r\n          addMarkers(data);\r\n          buildRestroomList(data);\r\n        });\r\n\r\n      // change coordinates displayed when map moves\r\n      map.on('move', () => {\r\n        const { lng, lat } = map.getCenter();\r\n        this.setState({\r\n          lng: lng.toFixed(4),\r\n          lat: lat.toFixed(4),\r\n          zoom: map.getZoom().toFixed(2)\r\n        });\r\n      });\r\n\r\n      function addMarkers(data) {\r\n        // iterate over passed in object data\r\n        // eslint-disable-next-line\r\n        data.features.map((marker, index) => {\r\n          // create a div for each object element\r\n          let mapMarker = document.createElement('div');\r\n          // add class marker to each created div\r\n          mapMarker.classList = 'marker';\r\n          // new mapbox marker for each created marker div\r\n          new mapboxgl.Marker(mapMarker, {offset: [0, -20]})\r\n            .setLngLat(marker.geometry.coordinates)\r\n            .addTo(map);\r\n          // event listner for each map marker\r\n          mapMarker.addEventListener('click', (e) => {\r\n            let activeItem = document.getElementsByClassName('active');\r\n            // select any previous active markers\r\n            e.stopPropagation();\r\n            createPopup(marker);\r\n            flyToMarker(marker);\r\n            if(activeItem[0]) {\r\n              activeItem[0].classList.remove('active');\r\n            }\r\n            let restroom = document.getElementById(`listing-${index}`);\r\n            restroom.classList.add('active');\r\n          });\r\n        });\r\n      };\r\n\r\n      function createPopup(currentMarker) {\r\n        let current = currentMarker.properties;\r\n        // select any previous popups\r\n        const popups = document.getElementsByClassName('mapboxgl-popup');\r\n        // console.log(popups);\r\n        // remove previous popups from display\r\n        if(popups[0]) {\r\n          popups[0].remove();\r\n        };\r\n        // create popup at selected marker\r\n        // eslint-disable-next-line\r\n        let newPopup = new mapboxgl.Popup({ closeOnClick: false})\r\n          .setLngLat(currentMarker.geometry.coordinates)\r\n          .setHTML(`<h3>${current.name}</h3>\r\n                      <h4>Address: ${current.address}</h4>\r\n                      <div class=\"details\">${current.year_round ? 'Open year round' : ''}</div>\r\n                      <div class=\"details\">${current.handicap_a11y ? '<div id=\"a11y\"></div>' : ''}\r\n            `)\r\n          .addTo(map);\r\n      }\r\n\r\n      function flyToMarker(currentMarker) {\r\n        map.flyTo({\r\n          center: currentMarker.geometry.coordinates,\r\n          zoom: 15\r\n        });\r\n      }\r\n\r\n      function buildRestroomList(data) {\r\n        // console.log(data);\r\n        // eslint-disable-next-line\r\n        data.features.map((restroom, index) => {\r\n            let currentRestroom = restroom;\r\n            let restroomProp = currentRestroom.properties;\r\n            // select locations container in sidebar and append div / item for each restroom\r\n            let locations = document.getElementById('locations');\r\n            let location = `<div class='item' id=listing-${index}>\r\n                                <a href='#' class='title' data-value=${index}>${restroomProp.name}</a>\r\n                                <div class='details'>${restroomProp.address}<br>${restroomProp.year_round ? 'Open Year Round' : ''} ${restroomProp.handicap_a11y ? 'Handicap Accessible' : ''}<br>\r\n                                </div>   \r\n                            </div><br>`;\r\n            locations.innerHTML += location;\r\n            locations.addEventListener('click', e => {\r\n              let activeItem = document.getElementsByClassName('active');\r\n              if(activeItem[0]) {\r\n                activeItem[0].classList.remove('active');\r\n              }\r\n              // console.log(e.target.classList);\r\n              if(e.target.className === 'title') {\r\n                let clickedRestroom = data.features[e.target.getAttribute('data-value')];\r\n                e.target.parentNode.classList.add('active');\r\n                flyToMarker(clickedRestroom);\r\n                createPopup(clickedRestroom);\r\n              }                                       \r\n            })\r\n        });\r\n      }\r\n    }   \r\n    clearPopup = () => {\r\n      const popups = document.getElementsByClassName('mapboxgl-popup');\r\n      if(popups[0]) {\r\n        popups[0].remove();\r\n      };\r\n    }\r\n    handleToggle = () => {\r\n      this.setState({open: !this.state.open})\r\n      document.querySelector('.burger-menu').classList.toggle('open');\r\n    }\r\n    handleClose = () => this.setState({open: false});\r\n\r\n    updateQuery = query => {\r\n      this.setState({query})\r\n      let locations = document.getElementsByClassName('item');\r\n      let mapMarkers = document.getElementsByClassName('marker');\r\n      query = query.toLowerCase();\r\n      // console.log(mapMarkers);\r\n      this.clearPopup();\r\n      for(let i = 0; i < locations.length; i++) {\r\n          if(locations[i].innerText.toLowerCase().indexOf(query) > - 1) {\r\n            locations[i].style.display = \"\";\r\n            mapMarkers[i].style.display = \"\";\r\n          } else {\r\n            locations[i].style.display = \"none\";\r\n            mapMarkers[i].style.display = \"none\";\r\n          }\r\n      }\r\n    }\r\n  render() {\r\n    // contains lng, lat coordinates for the location layer in upper right\r\n    const { lng, lat, zoom } = this.state;\r\n    const drawerStyle = { \r\n      'textAlign': 'center'\r\n    };\r\n    return (\r\n      <main>\r\n        <div className=\"inline-block absolute top right mt12 ml12 bg-darken75 color-white z1 py6 px12 round-full txt-s txt-bold\">\r\n          <div>{`Longitude: ${lng} Latitude: ${lat} Zoom: ${zoom}`}</div>\r\n        </div>\r\n\r\n        <div ref={el => this.mapContainer = el} className=\"absolute top right left bottom\">\r\n        </div>\r\n        <BurgerIcon label=\"Open Menu\" onClick={this.handleToggle} />\r\n        <MuiThemeProvider>\r\n          <Drawer\r\n            docked={false}\r\n            width={'25%'}\r\n            open={this.state.open}\r\n            onRequestChange={(open) => this.setState({open})}\r\n            style={drawerStyle}\r\n          >\r\n          <SearchBar updateQuery={this.updateQuery}/>\r\n            <div className=\"locations\" id=\"locations\">\r\n              <h2 className=\"title-large\">Public Restrooms In Manhattan</h2>\r\n\r\n            </div>\r\n          </Drawer>\r\n        </MuiThemeProvider>\r\n        \r\n      </main>\r\n    );\r\n  }\r\n}\r\nexport default App;\r\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n\n              // Execute callback\n              if (config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}